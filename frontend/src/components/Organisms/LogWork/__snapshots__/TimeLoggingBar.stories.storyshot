// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Organisms/Time Logging/Bar Default 1`] = `
.c14 svg {
  height: 1.5rem;
  width: 1.5rem;
  --text-opacity: 1;
  color: rgba(255,255,255,var(--text-opacity));
}

.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 2.375rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  border-width: 1px;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  border-radius: 0.375rem;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-timing-function: cubic-bezier(0.4,0,0.2,1);
  transition-timing-function: cubic-bezier(0.4,0,0.2,1);
  -webkit-transition-duration: 150ms;
  transition-duration: 150ms;
  border-color: transparent;
  --text-opacity: 1;
  color: rgba(255,255,255,var(--text-opacity));
  --bg-opacity: 1;
  background-color: rgba(88,80,236,var(--bg-opacity));
  opacity: 0.5;
  pointer-events: none;
}

.c13:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.c13:hover {
  --bg-opacity: 1;
  background-color: rgba(104,117,245,var(--bg-opacity));
}

.c13:focus {
  --border-opacity: 1;
  border-color: rgba(81,69,205,var(--border-opacity));
  box-shadow: 0 0 0 3px rgba(180,198,252,0.45);
}

.c13:active {
  --bg-opacity: 1;
  background-color: rgba(81,69,205,var(--bg-opacity));
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c1 {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1.25rem;
  --text-opacity: 1;
  color: rgba(55,65,81,var(--text-opacity));
}

.c2 {
  margin-top: 0.25rem;
  position: relative;
  border-radius: 0.375rem;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05);
}

.c3 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #ffffff;
  border-color: #d2d6dc;
  border-width: 1px;
  border-radius: 0.375rem;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  display: block;
  width: 100%;
}

.c3::-webkit-input-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c3::-moz-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c3::placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c3:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(164,202,254,0.45);
  border-color: #a4cafe;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1.25rem;
  --text-opacity: 1;
  color: rgba(55,65,81,var(--text-opacity));
}

.c6 {
  margin-top: 0.25rem;
  position: relative;
  border-radius: 0.375rem;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05);
}

.c7 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #ffffff;
  border-color: #d2d6dc;
  border-width: 1px;
  border-radius: 0.375rem;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  display: block;
  width: 100%;
}

.c7::-webkit-input-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c7::-moz-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c7:-ms-input-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c7::placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(164,202,254,0.45);
  border-color: #a4cafe;
}

.c10 {
  margin-top: 0.25rem;
  position: relative;
  border-radius: 0.375rem;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05);
}

.c11 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #ffffff;
  border-color: #d2d6dc;
  border-width: 1px;
  border-radius: 0.375rem;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  display: block;
  width: 100%;
}

.c11::-webkit-input-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c11::-moz-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c11:-ms-input-placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c11::placeholder {
  color: #9fa6b2;
  opacity: 1;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(164,202,254,0.45);
  border-color: #a4cafe;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c9 {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1.25rem;
  --text-opacity: 1;
  color: rgba(55,65,81,var(--text-opacity));
}

.c12 {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1.25rem;
  --text-opacity: 1;
  color: rgba(55,65,81,var(--text-opacity));
}

@media (min-width:640px) {
  .c3 {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

@media (min-width:640px) {
  .c7 {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

@media (min-width:640px) {
  .c11 {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
}

<form
  onSubmit={[Function]}
>
  <div
    className="bg-white shadow overflow-hidden sm:rounded-md mb-8"
  >
    <div
      className="px-4 py-4"
    >
      <div>
        <div
          className="c0"
        >
          <label
            className="c1"
            htmlFor="text-input-log-what"
          >
            What have you done?
          </label>
        </div>
        <div
          className="c2"
        >
          <input
            className="c3"
            id="text-input-log-what"
            onChange={[Function]}
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="py-4"
      >
        <div
          data-reach-combobox=""
        >
          <div
            className="c4"
          >
            <label
              className="c5"
            >
              Where
            </label>
          </div>
          <div
            className="c6"
          >
            <input
              aria-autocomplete="both"
              aria-expanded={false}
              aria-haspopup="listbox"
              className="c7"
              data-reach-combobox-input=""
              id="dropdown-log-where"
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              role="combobox"
              value=""
            />
          </div>
        </div>
      </div>
      <div
        className="flex w-full pb-4 justify-between"
      >
        <div
          className="w-full"
        >
          <div
            className="c8"
          >
            <label
              className="c9"
              htmlFor="datetimepicker-log-from"
            >
              From
            </label>
          </div>
          <div
            className="react-datepicker-wrapper"
          >
            <div
              className="react-datepicker__input-container"
            >
              <div
                className="c10"
              >
                <input
                  className="c11"
                  onChange={[Function]}
                  onClick={[Function]}
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="w-full px-4"
        >
          <div
            className="c8"
          >
            <label
              className="c9"
              htmlFor="datetimepicker-log-to"
            >
              To
            </label>
          </div>
          <div
            className="react-datepicker-wrapper"
          >
            <div
              className="react-datepicker__input-container"
            >
              <div
                className="c10"
              >
                <input
                  className="c11"
                  onChange={[Function]}
                  onClick={[Function]}
                  value=""
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="w-full"
        >
          <div
            className="c0"
          >
            <label
              className="c1"
              htmlFor="text-input-log-break"
            >
              Break time (h)
            </label>
          </div>
          <div
            className="c2"
          >
            <input
              className="c3"
              id="text-input-log-break"
              onChange={[Function]}
              type="number"
              value="1"
            />
          </div>
        </div>
      </div>
      <div
        className="w-full flex justify-between items-center"
      >
        <label
          className="c12"
        >
          Work time: 0h
        </label>
        <label
          className="c12"
        >
          Full time: 1h
        </label>
        <button
          className="c13"
          color="primary"
          disabled={true}
          type="submit"
        >
          <div
            className="c14"
            color="primary"
          >
            <svg
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                d="M5 13l4 4L19 7"
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
              />
            </svg>
          </div>
        </button>
      </div>
    </div>
  </div>
</form>
`;
